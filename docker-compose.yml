version: '2.1'
services:
    mysql_magento:
        image: 'mariadb:10.2'
        environment:
            - MYSQL_ROOT_PASSWORD=magento2
            - MYSQL_DATABASE=magento2
            - MYSQL_USER=magento2
            - MYSQL_PASSWORD=magento2
        volumes:
            - './.docker/mysql/:/var/lib/mysql'
        healthcheck:
            test: 'mysqladmin ping -h localhost'
            interval: 30s
            timeout: 30s
            retries: 3
        networks:
            magento:
                aliases:
                    - mysql_magento

    elasticsearch_magento:
        image: markoshust/magento-elasticsearch:7.6.2-2
        environment:
            - "discovery.type=single-node"
        networks:
            magento:
                aliases:
                    - elasticsearch_magento

    fpm:
        hostname: fpm.magento2.docker
        image: 'magento/magento-cloud-docker-php:7.3-fpm-1.1'
        extends: generic
        volumes:
            - '.:/app:delegated'
            - './.docker/mnt:/mnt:rw,delegated'
        environment:
            - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip xsl sodium xdebug'
        networks:
            magento:
                aliases:
                    - fpm_magento
        depends_on:
            mysql_magento:
                condition: service_started

    web:
        hostname: web.magento2.docker
        image: 'magento/magento-cloud-docker-nginx:1.19-1.2.1'
        extends: generic
        volumes:
            - '.:/app:delegated'
        environment:
            - WITH_XDEBUG=1
            - NGINX_WORKER_PROCESSES=4
            - NGINX_WORKER_CONNECTIONS=1024
        networks:
            magento:
                aliases:
                    - nginx_magento
        depends_on:
            fpm:
                condition: service_started

    varnish:
        hostname: varnish.magento2.docker
        image: 'magento/magento-cloud-docker-varnish:6.2-1.2.1'
        networks:
            magento:
                aliases:
                    - varnish_magento
        depends_on:
            web:
                condition: service_started

    tls:
        hostname: tls.magento2.docker
        image: 'magento/magento-cloud-docker-nginx:1.19-1.2.1'
        extends: generic
        volumes:
            - './.docker/log/:/var/log/nginx/:delegated'
        networks:
            magento:
                aliases:
                    - tls_magento
        environment:
            - NGINX_WORKER_PROCESSES=4
            - NGINX_WORKER_CONNECTIONS=1024
            - UPSTREAM_HOST=varnish
            - UPSTREAM_PORT=80
        depends_on:
            varnish:
                condition: service_started

    generic:
        hostname: generic.magento2.docker
        image: 'magento/magento-cloud-docker-php:7.3-cli-1.1'
        volumes:
            - './.composer:/app/.composer:rw,delegated'
        env_file: ./.docker/config.env
        environment:
            - MAGENTO_RUN_MODE=developer
            - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip redis xsl sodium'

    redis_magento:
        image: redis:5.0-alpine
        networks:
            magento:
                aliases:
                    - redis_magento

    mailhog:
        hostname: mailhog.magento2.docker
        image: 'mailhog/mailhog:latest'
        networks:
            magento:
                aliases:
                    - mailhog_magento

    phpmyadmin:
        image: phpmyadmin
        environment:
            - PMA_HOST=mysql_magento
            - PMA_PORT=3306
        volumes:
            - './.docker/phpmyadmin/sessions:/sessions'
        networks:
            magento:
                aliases:
                    - phpmyadmin_magento

    build:
        image: 'magento/magento-cloud-docker-php:7.3-cli-1.1'
        extends: generic
        volumes:
            - '.:/app:rw,delegated'
            - './vendor:/app/vendor:rw,delegated'
            - './generated:/app/generated:rw,delegated'
            - '~/.composer/cache:/root/.composer/cache:rw,delegated'
            - './.composer/auth.json:/root/.composer/auth.json:rw,delegated'
        networks:
            magento:
                aliases:
                    - magecli_magento
        depends_on:
            mysql_magento:
                condition: service_started
            redis_magento:
                condition: service_started
            elasticsearch_magento:
                condition: service_started

    fpm_xdebug:
        hostname: fpm_xdebug.magento2.docker
        image: 'magento/magento-cloud-docker-php:7.3-fpm-1.1'
        extends: generic
        volumes:
            - '.:/app:ro,delegated'
            - './vendor:/app/vendor:ro,delegated'
            - './generated:/app/generated:rw,delegated'
            - './var:/app/var:rw,delegated'
            - './app/etc:/app/app/etc:rw,delegated'
            - './pub/media:/app/pub/media:rw,delegated'
            - './pub/static:/app/pub/static:rw,delegated'
            - './.docker/mnt:/mnt:rw,delegated'
        environment:
            - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip xsl sodium xdebug'
        networks:
            magento:
                aliases:
                    - fpm_xdebug.magento2.docker
        depends_on:
            mysql_magento:
                condition: service_started

networks:
    magento:
        driver: bridge

volumes:
    sockdata:
